local DIRECTION_RIGHT = 1
local DIRECTION_LEFT = -1
local BASE_VELOCITY = 500
local GRAVITY = 1000
function init(self)
	msg.post("#","acquire_input_focus") 
	self.velocity = vmath.vector3(0,0,0)
	self.direction = DIRECTION_RIGHT
	self.ground_contact = false
end

function walk_without_physics(direction)
	-- # shortcut means this  component in that case only script will receive
	-- .  all components will receive
	-- hash - change string to numeric value - used in action_id or message id
	-- get position from game object

	local position = go.get_position()
	position.x = position.x + 5 * direction

	-- set postion to the go
	go.set_position(position)
end

function walk_with_physics(self)
	self.velocity.x = BASE_VELOCITY * self.direction	
end

function animation(action)
	if action.pressed then
		sprite.play_flipbook("#sprite_hero", "Run")
	elseif action.released then
		sprite.play_flipbook("#sprite_hero", "idle")
	end
end

function flip(direction)
	sprite.set_hflip("#sprite_hero", direction<0)  --sprite.set_hflip("#sprite", false)
end

function on_input(self, action_id, action)

	animation(action)
	--local direction = (action_id == hash("right")) and DIRECTION_RIGHT or DIRECTION_LEFT
	--walk(direction)
	--flip(direction)--[[ ]]--
	if action_id == hash("right") then
		--walk_without_physics(DIRECTION_RIGHT)
		self.direction = DIRECTION_RIGHT
		walk_with_physics(self)
		flip(self.direction)		
	elseif action_id == hash("left") then 
		self.direction = DIRECTION_LEFT
		walk_with_physics(self)
		flip(self.direction)				
	end			

	if action_id == hash("escape") then
		msg.post("@system:", "exit", {code = 0})
	end
end



function fixed_update(self, dt)
	--gravity
	self.velocity.y = self.velocity.y - GRAVITY * dt
	self.velocity.y = vmath.clamp(self.velocity.y,-2000,2000)

	if self.ground_contact == true then
		self.velocity.y = 0
	end
	
	local pos = go.get_position()
	pos = pos + self.velocity * dt
	go.set_position(pos)
	self.velocity.x = 0
	
end


function on_message(self, message_id, message, sender)
	--pprint(message_id,message)
	if(message_id == hash("contact_point_response")) and message.other_group == hash("level") then
		self.ground_contact = true
		self.velocity.y = 0
	end

end


function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end




function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
