local DIRECTION_RIGHT = 1
local DIRECTION_LEFT = -1
local BASE_VELOCITY = 500
function init(self)
	msg.post("#","acquire_input_focus") 
	self.velocity = vmath.vector3(0,0,0)
end

function walk_without_physics(direction)
	-- # shortcut means this  component in that case only script will receive
	-- .  all components will receive
	-- hash - change string to numeric value - used in action_id or message id
	-- get position from game object

	local position = go.get_position()
	position.x = position.x + 5 * direction

	-- set postion to the go
	go.set_position(position)
end

function walk_with_physics(self,direction)
	self.velocity.x = BASE_VELOCITY * direction	
end

function animation(action)
	if action.pressed then
		sprite.play_flipbook("#sprite", "Run")
	elseif action.released then
		sprite.play_flipbook("#sprite", "idle")
	end
end

function flip(direction)
	sprite.set_hflip("#sprite", direction<0)  --sprite.set_hflip("#sprite", false)
end

function on_input(self, action_id, action)

	animation(action)
	--local direction = (action_id == hash("right")) and DIRECTION_RIGHT or DIRECTION_LEFT
	--walk(direction)
	--flip(direction)--[[ ]]--
	if action_id == hash("right") then
		--walk_without_physics(DIRECTION_RIGHT)
		walk_with_physics(self,DIRECTION_RIGHT)
		flip(DIRECTION_RIGHT)		
	elseif action_id == hash("left") then 
		walk_with_physics(self,DIRECTION_LEFT)
		flip(DIRECTION_LEFT)				
	end			

end

function fixed_update(self, dt)
	local pos = go.get_position()
	pos = pos + self.velocity * dt
	go.set_position(pos)
	self.velocity.x = 0
	
end

		
function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end




function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
